usethis::use_rcpp
usethis::use_rcpp()
usethis::use_package_doc()
library(rearcut)
library(rearcut)
library(rearcut)
usethis::use_data_raw()
system("
cd data-raw
git clone https://github.com/mapbox/earcut.hpp
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
git log -n 10 > mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
git log -n 10 } mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
git log -n 10 | mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
git log -n 10>| mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
git log >  mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
cd earcut.hpp
git log -n 20  >  ../mapbox-earcut.hpp.git.log
")
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
cd earcut.hpp
git log -n 5  >  ../mapbox-earcut.hpp.git.log
")
usethis::use_readme_rmd()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
tools::package_native_routine_registration_skeleton("../rearcut", "src/init.c",character_only = FALSE)
library(rearcut)
system("
cd data-raw
#git clone https://github.com/mapbox/earcut.hpp
cp earcut.hpp/include/mapbox/earcut.hpp ../src/
cp earcut.hpp/LICENSE ../src/
cd earcut.hpp
git log -n 5  >  ../mapbox-earcut.hpp.git.log
")
library(rearcut)
library(rearcut)
library(rearcut)
rearcut(1, 1)
library(rearcut)
rearcut(1, 1)
library(rearcut)
rearcut(1:10, 10:1)
Rcpp::sourceCpp('src/rearcut.cpp')
library(silicate)
minimal_mesh$geom[[1]]
minimal_mesh$geom[[1]][[1]]
minimal_mesh$geom[[1]][[1]][[1]]
dput(minimal_mesh$geom[[1]][[1]][[1]])
library(rearcut)
library(rearcut)
rearcut(1:10, 10:1)
library(rearcut)
library(rearcut)
X <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0)
Y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0)
rgl::triangulate(X, Y)
dput(rgl::triangulate(X, Y))
X <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0)
Y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0)
ind <- rearcut(X, Y)  ## should be longer than 0 :)
## a working case for illustration
if (length(ind) < 3) {
ind <- c(8L, 2L, 1L, 8L, 5L, 2L, 8L, 7L, 5L, 5L, 3L, 2L, 5L,
4L, 3L, 7L, 6L, 5L) - 1
}
plot(X, Y)
apply(matrix(ind, nrow = 3), 2, function(x) polygon(cbind(X, Y)[x + 1, ]))
library(rearcut)
library(rearcut)
X <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0)
Y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0)
ind <- rearcut(X, Y)  ## should be longer than 0 :)
if (length(ind) < 3) {
// this is rgl's solution, it's not necessarily deterministic
ind <- c(8L, 2L, 1L, 8L, 5L, 2L, 8L, 7L, 5L, 5L, 3L, 2L, 5L,
4L, 3L, 7L, 6L, 5L) - 1
}
plot(X, Y)
X <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0)
Y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0)
ind <- rearcut(X, Y)  ## should be longer than 0 :)
if (length(ind) < 3) {
## this is rgl's solution, it's not necessarily deterministic
ind <- c(8L, 2L, 1L, 8L, 5L, 2L, 8L, 7L, 5L, 5L, 3L, 2L, 5L,
4L, 3L, 7L, 6L, 5L) - 1
}
plot(X, Y)
apply(matrix(ind, nrow = 3), 2, function(x) polygon(cbind(X, Y)[x + 1, ]))
library(rearcut)
library(rearcut)
P_d(1, 1)
library(rearcut)
P_d(1, 1)
library(rearcut)
library(rearcut)
P_d(1, 1)
library(rearcut)
P_d(1, 1)
library(rearcut)
P_d(1, 1)
P_d(1:10, 1:10)
library(rearcut)
P_d(1:10, 1:10)
library(rearcut)
P_d(1:10, 1:10)
library(rearcut)
X <- c(0, 0, 0.75, 1, 0.5, 0.8, 0.69, 0)
Y <- c(0, 1, 1, 0.8, 0.7, 0.6, 0, 0)
ind <- rearcut(X, Y)
ind
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
tools::package_native_routine_registration_skeleton("../rearcut", "src/init.c",character_only = FALSE)
library(rearcut)
ind <- rearcut(X, Y)
ind
library(rearcut)
ind <- rearcut(X, Y)
ind
P_d(X, Y)
rearcut(X, Y)
library(rearcut)
rearcut(X, Y)
library(rearcut)
rearcut(X, Y)
library(rearcut)
rearcut(X, Y)
P_d(X, Y)
library(rearcut)
devtools::load_all(".")
devtools::load_all(".")
library(rearcut)
library(rearcut)
library(rearcut)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%"
)
## example data from polypath
## rather than separate rings by NA we indicate those positions
## (here the hole starts at 5 and is the only one)
x <- c(.1, .1, .9, .9, .2, .2, .8, .8)
y <- c(.1, .9, .9, .1, .2, .8, .8, .2)
library(rearcut)
ind <- earcut(cbind(x, y), holes = 5L)
rearcut:::plot_tri(x, y, ind, col = "grey")
